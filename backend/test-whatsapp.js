#!/usr/bin/env node

/**
 * WhatsApp Test Script
 * Tests WhatsApp functionality without requiring database connection
 */

require('dotenv').config();
const { sendWhatsApp, sendWhatsAppNotification, notifyAdmins } = require('./utils/notifications');

console.log('üîç WhatsApp Configuration Check');
console.log('================================');

// Check environment variables
console.log('\nüìã Environment Variables:');
console.log('TWILIO_ACCOUNT_SID:', process.env.TWILIO_ACCOUNT_SID ? '‚úÖ Set' : '‚ùå Missing');
console.log('TWILIO_AUTH_TOKEN:', process.env.TWILIO_AUTH_TOKEN ? '‚úÖ Set' : '‚ùå Missing');
console.log('TWILIO_WHATSAPP_NUMBER:', process.env.TWILIO_WHATSAPP_NUMBER || '‚ùå Missing');
console.log('ADMIN_PHONE_1:', process.env.ADMIN_PHONE_1 || '‚ùå Missing');
console.log('ADMIN_PHONE_2:', process.env.ADMIN_PHONE_2 || '‚ùå Missing');
console.log('ADMIN_PHONE_3:', process.env.ADMIN_PHONE_3 || '‚ùå Missing');

// Test WhatsApp notification
async function testWhatsAppNotification() {
  console.log('\nüß™ Testing WhatsApp Notification...');
  console.log('===================================');
  
  try {
    // Create test problem data
    const testProblemData = {
      category: 'electricity',
      subcategory: '‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡ßÅ‡ßé ‡¶¨‡¶ø‡¶≠‡ßç‡¶∞‡¶æ‡¶ü',
      description: '‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ - WhatsApp ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶æ‡¶∞‡¶ø‡¶§‡¶æ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ',
      location: {
        address: '‡¶¢‡¶æ‡¶ï‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂'
      },
      userName: '‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ',
      userPhone: '+8801712345678',
      userEmail: 'test@example.com',
      createdAt: new Date()
    };
    
    console.log('üì± Sending test WhatsApp notification...');
    const result = await sendWhatsAppNotification(testProblemData);
    
    if (result) {
      console.log('‚úÖ WhatsApp notification test PASSED');
      return true;
    } else {
      console.log('‚ùå WhatsApp notification test FAILED');
      return false;
    }
  } catch (error) {
    console.error('‚ùå WhatsApp test error:', error.message);
    return false;
  }
}

// Test individual WhatsApp message
async function testSingleWhatsApp() {
  console.log('\nüß™ Testing Single WhatsApp Message...');
  console.log('====================================');
  
  try {
    const testPhone = process.env.ADMIN_PHONE_1;
    if (!testPhone) {
      console.log('‚ùå No admin phone number configured for testing');
      return false;
    }
    
    const testMessage = `üîî *‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ*

‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø WhatsApp ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶æ‡¶∞‡¶ø‡¶§‡¶æ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡•§

‡¶∏‡¶Æ‡¶Ø‡¶º: ${new Date().toLocaleString('bn-BD')}

‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡ß®‡ß¨ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ`;
    
    console.log(`üì± Sending test message to ${testPhone}...`);
    const result = await sendWhatsApp(testPhone, testMessage);
    
    if (result.success) {
      console.log('‚úÖ Single WhatsApp message test PASSED');
      console.log('üìã Message SID:', result.sid);
      return true;
    } else {
      console.log('‚ùå Single WhatsApp message test FAILED');
      console.log('‚ùå Error:', result.error);
      return false;
    }
  } catch (error) {
    console.error('‚ùå Single WhatsApp test error:', error.message);
    return false;
  }
}

// Main test function
async function runTests() {
  console.log('\nüöÄ Starting WhatsApp Tests...');
  console.log('=============================');
  
  let passedTests = 0;
  let totalTests = 2;
  
  // Test 1: Single WhatsApp message
  if (await testSingleWhatsApp()) {
    passedTests++;
  }
  
  // Test 2: WhatsApp notification to all admins
  if (await testWhatsAppNotification()) {
    passedTests++;
  }
  
  // Summary
  console.log('\nüìä Test Results Summary');
  console.log('=======================');
  console.log(`‚úÖ Passed: ${passedTests}/${totalTests}`);
  console.log(`‚ùå Failed: ${totalTests - passedTests}/${totalTests}`);
  
  if (passedTests === totalTests) {
    console.log('\nüéâ All tests PASSED! WhatsApp is working correctly.');
    console.log('\nüí° If you\'re not receiving messages, check:');
    console.log('   1. Admin phone numbers have joined WhatsApp sandbox');
    console.log('   2. Phone numbers are in correct E.164 format');
    console.log('   3. Twilio console logs for delivery status');
  } else {
    console.log('\n‚ö†Ô∏è  Some tests FAILED. Check the errors above.');
    console.log('\nüîß Common issues:');
    console.log('   1. Missing or incorrect Twilio credentials');
    console.log('   2. WhatsApp sandbox not configured');
    console.log('   3. Admin phone numbers not joined to sandbox');
    console.log('   4. Invalid phone number format');
  }
  
  process.exit(passedTests === totalTests ? 0 : 1);
}

// Run tests if script is executed directly
if (require.main === module) {
  runTests().catch(error => {
    console.error('‚ùå Test runner error:', error);
    process.exit(1);
  });
}

module.exports = {
  testWhatsAppNotification,
  testSingleWhatsApp,
  runTests
};
